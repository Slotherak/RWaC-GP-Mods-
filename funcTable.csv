FuncName,FuncDescription,FuncArguments,FuncOutputs
arguments,displays the required and optional extra parameters to the given function. Terms in curly braces are required and terms in brackets are optional. If multiple optional arguments are available then you can bystep earlier ones by typing nil in their place instead,{funcName},text indicating order and definition of input parameters for the function
connect,connects through the given serial port to a peripheral. Types supported include keyboards|cameras|mice|CNC devices|and routers.,{connectionHandle} {connectionType=keyboard|mouse|printer|CNCextruder|CNCextractor|router} {serialPortNumber},N/A
deform,takes a primitive shape's vertice and moves it with optional subdivision,"{primObject} {verticePoint {must be on shape}} OR {verticeArray {must be on shape}} [subdivisionBoolean, defaults to 0 for no subdivision]",changes the verticeArray of the given primitive and returns the new verticeArray
delete,removes the given object from the scene. Entirely. If given a selection of points/vertices it will remove the whole primitive to which those points correspond to. Can be undone. Probably.,{primObject} OR {verticeArray} OR {faceArray},N/A
editShape,changes the active primitive to the specified handle {or if the boolean toggle is provided changes the current primitive to this handle}. However this deletes any other primitive that had this name before the reassignment.,{primObject} [booleanToggle: defaults to false],if booleanToggle is false returns the desired primitive. If true returns the current primitve with the new name and dumps garbage memory.
erase,Deletes the given selection from the scene. Context sensitive will only delete what you specifically specify. Cannot delete faces from an object as unfortunately you will need those. Use Shave to wipe faces.,{primObject] OR {verticeArray},N/A
flip,reflects the whole object to produce a reversed object shape as if seen in a mirror,"{primObject} {axisType=xy,yz,xz,v} [if v, vectorOfPlaneNormal]",changes the primitive to reflect the flip and returns the new version.
help,Shows function usage and description,{funcName},text describing the function. What do you want from me?
helpVector,Vectors are an ambiguous term used a lot in math and physics and engineering for a wide variety of purposes. All a vector really is is a set of numbers like:,{9 4 -20} would be a vector that uses three values. This is common for position vectors as it can represent X Y and Z coordinates. {6} is also a vector. It just has one value but it is still a real vector.,N/A
helpVector2,Directional vectors are often used on positional vectors for various reasons. It sounds complicated but it actually makes it much easier. ,"Another word you might be aware of is ""matrix"". That is a vector of vectors {of vectors {of vectors {of vectors…} } }! This is the main reason we use vectors in this system.",N/A
helpVector3,With matrix math a lot of complicated questions can easily be computed and calculated. But all you need to know are what numbers the vector holds and how many of them it holds.,Normally a vector holds numbers in each slot separated by commas. Some use brackets [] some use parentheses { } but you have to use parentheses with this system. Programming limits.,N/A
letsAGo,play a short melody.,none,music
load,loads a file or program.,{filename} [fileDirectory],the contents of the file
mergeAND,Takes two primitives and cuts off all material that is not shared between the two volumes. New primitive gains first primitives handle. Second primitive is nulled.,{firstPrimObject} {secondPrimObject},the result of primitive A AND primitive B under the handle of primitive A
mergeNOT,Takes two primitives. The second will be removed along with all of the volume it occupied in the first. Not Undo-able.,{firstPrimObject} {secondPrimObject},the result of primitive A NOT in primitive B under the handle of primitive A
mergeOR,add the two primitives supplied together. The result will be if they were overlapped at their current positions. The new primitive is given the first primitive's handle and the second primitive is nulled.,{firstPrimObject} {secondPrimObject},the result of primitive A OR primitive B under the handle of primitive A
mergeXOR,Takes two primitives and cuts off all material that is shared between the two volumes. Primitives retain their handles.,{firstPrimObject} {secondPrimObject},the result of primitive A XOR primitive B under their respective handles
move,shifts a shape or section of a shape by a vector transformation without any change in orientation,"{primObject} OR {verticeArray} OR {faceArray} {vectorDirection, format x, y, z, distance}",the targets new coordinates
new,refreshes the viewport {resetting all shapes and primitives to factory settings}.,none,N/A
new3DShape,creates a new shape primitive with the requested faces and vertices,{primObjectHandle} {verticeArray} {handleLocationXYZ} [faceArray],the handle for a new 3dShape class primitive
newCircle,draws a circle like if you used newPolygon but allows you to have a {somewhat theoretically} infinite number of sides. Minimum of 3 sides for logistical reasons.,{primFlatHandle} {numberOfSides} {radius} {planeType={xy or z|yz or x|xz or y|v}} {locationXYZ} [if v vectorOfPlaneNormal],the handle of a new Circle class primitive
newCylinder,creates a can-like shape. Good for pillars and columns. Subdivision level will increase face count of rounded edges for a smoother look. Or use smooth. I ain't your papa.,"{primObjectHandle} {locationCenterBaseXYZ} {radius} {height} [subdivisionLevel, defaults to 2 for an octagonal shape, minimum of 1]",the handle of a new Cylinder class primitive
newLine,creates a line with the given coordinates and thickness.,"{primObjectHandle} {vertexOne} {vertexTwo} [widthInt, defaults to 1, cannot be less than one]",the handle of a new Line class primitive
newPoint,adds a point to the given location. This can be used to help in sculpting shapes by being later merged into an existing shape or set of points to create a vertice array.,{verticeHandle} {locationXYZ},returns the handle of a new Vertice class primitive
newPolygon,creates the given regular polygon on the given planar region.,"{primFlatHandle} {n of n-gon} {planeType={xy or z, yz or x, xz or y, v}} {handleLocationXYZ} [starToggle, defaults to false for non-star polygon] [if v, vectorOfPlaneNormal]",the handle of a new Polygon class primitive
newSphere,creates a sphere of the given measurements. Input is origin {where the center is} then radius. Will create vertices at a minimum on the same locations as an octahedron. NOT USED TO MAKE AN ACTUAL SPHERE. Use with a merge function for that.,{primObjectHandle} {originLocationXYZ} {radius},the handle for a new Ball class primitive
outputs,Shows what the return statement for a function would give if any. funcOutput only works on functions that return at least one output. The following will not work: erase helpvector new qs connect undo redo quit,{funcName},text regarding exactly what the function if called will directly return
qs,quicksaves a project to it's last registered save position. Disabled by default as this can overwrite files unintentionally.,none,N/A
quit,going so soon? Alright bye!,none,N/A
redo,repeats the last transformative action {CAUTION: USE SPARINGLY. CAN BEHAVE UNEXPECTEDLY IF PAIRED WITH ITSELF OR NEW} {affects same commands as undo},none,N/A
reflect,takes a given selection of a shape and mirrors it across a given plane {cardinal plane or vector normal},"{primObject} OR {verticeArray} OR {faceArray} {axisType={xy,xz,yz,v} } [if v, vectorOfPlaneNormal]",the handle of the given object with the new changes applied
rotate,turns the object or selection on a given cardinal axis or a vector from the origin,{primObject} OR {verticeArray} OR {faceArray} {rotationAmount in degrees clockwise} {axisType={x|y|z|xy|xz|yz|-xy|-xz|-yz|v} } [if v then axisOfRotation],the handle of the given object with the new changes applied
save,saves the current project to a file,{filename} [fileDirectory],a .AMF file 
scale,change the size ratio of the given shape by a scalar,{primObject} {scalarDouble},the handle of the given object with the new changes applied
shave,Takes a little off the top. All surfaces are slightly trimmed. In other words it erases the outermost layer of material from the shape. Just in case your model is a little too big and scaling will cause problems. Value is depth level.,{primObject} OR {verticeArray} OR {faceArray} [valueInt= defaults to 1 for minimum loss of size. Repeats this many times],the handle of the given object with the new changes applied
slic3r,runs the Slic3r program on the given shape to make the G-codes for 3D Printing. Outputs to given file location. Toggle determines the CNC type {true is extrusion|false is exclusion}. Second toggle is for temp control.,"{primObject} {saveFileName} [2 boolean toggles, defaults are 1 and 0 respectively]",A set of G-codes for a CNC printer to follow to make the supplied AMF object.
smoothen,rounds off a given shape or surface by reducing the elevation of said surface relative to it's normal vector{s}. 0 is no smoothing. 9 will turn a cube into a sphere. Kinda.,{primObject} OR {faceArray} {smoothValueDouble} {if a face array is given a normalVectorArray must be supplied here in the same order as the faces in the given array},the handle of the given object with the new changes applied
subdivide,expands the matrix of a shape {effectively giving it a more malleable body}. Allows smoother deformations. Will use the parameter to divide the given mesh into n^3 times as many vertices.,{primObject} OR {entireVerticeMatrixOfObject} OR {faceArray} {subdivisionInteger: from 2-9},a far denser network of vertices in a new array that fits exactly inside the ones supplied.
undo,use to revert the last transformative command's effects {does not affect help slic3r load save qs or connect but does affect new and itself}.,none,N/A
